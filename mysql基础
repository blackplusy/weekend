1.常见的数据库
	关系型数据库
		informix    军政运银
		db2			军政运银
		oracle 		中大型企业
		mysql		互联网公司
		sqlserver	传统
	非关系型数据库
		mongodb		大数据、爬虫
		redis		缓存、消息队列
		cassandra   同步速度快
2.数据库安装
	phpstudy
	mysql的目录结构
	bin		存放命令
	data	存放数据
	lib		存放库文件
	my.ini  mysql的配置文件
3.mysql的服务和端口
	c ------/------s
	mysql         mysqld
				  端口3306
	a.mysql的常见服务
		mysql    mysql的客户端服务
		mysqld   mysql的主服务
	b.mysqld的服务和端口
		mysqld的默认端口是3306
		win+r--cmd--netstat -an | find "3306"
			netstat -an  查看电脑中开放的所有端口
			|			 管道，前面的输出做伪后面的输入
			find		 搜索
		查看mysqld的服务
		win+r--cmd--tasklist | find "mysqld"
			tasklist     任务列表
4.mysql的登陆
	a.登陆命令
		mysql   
			登陆本地test数据库
		mysql -u root -p
			管理员登陆本地数据库
		mysql -h 127.0.0.1 -u root -p
			管理员登陆IP为127.0.0.1的数据库
	b.登陆方式
		b1.进入到命令所在文件夹
			win+r--cmd--
			d:
			cd phpStudy\PHPTutorial\MySQL\bin
		b2.设置环境变量
			计算机--属性--高级--环境变量--系统变量--Path中添加
			mysql的命令所在路径
			;D:\phpStudy\PHPTutorial\MySQL\bin
			确定
			重启cmd窗口生效
5.mysql的基础命令
	数据库分为2部分：数据库软件 数据库数据
	常说的数据库是数据库数据
	数据库是由表组成
	表是由数据组成
	show databases;  	查看当前有哪些数据库
	select database();	查看当前数据库的名字
	use mysql;          切换数据库为mysql
	show tables;		查看数据库中有哪些表
	select * from user; 查看user表中所有的数据
6.mysql的表结构
	a.mysql的数据类型
		数字	  int               12345
		字符	  char  varchar     'abc'  '1234'
		日期   date             '2019-01-11'
	b.mysql的表结构
		语法：create table 表(
				列名   数据类型，
				列名   数据类型...
		);
		创建表格商品(sp),名称(name)字符类型，价格(price)数字类型
		create table sp(
			name char(20),
			price int
		);
		补充：查看表结构(desc 表名;)
		查看sp表表结构
			desc sp;
		补充：mysql的图形管理工具
			 mysql workbench
			 sqlyog (小海豚)
			 dbeaver
			 navicat
	c.数据库中表的约束
		主键		列中的数据必须是唯一，通过一个条件只能查询到一条数据，不能为空，每张表中只能有一个主键
		唯一    列中的数据必须是唯一，通过一个条件只能查询到一条数据，做为主键约束的补充
		非空		列中的数据不能为空
		检查		列中的数据是否满足条件
		外键(参考) 一张表中的数据来源于另外一张表中的数据
		语法：
		create table 表(
			列  数据类型 primary key，
			列  数据类型 unique,
			列  数据类型 not null,
			列  数据类型 check(检查条件)，
			列  数据类型 refernces 被参考表(被参考列)
		);

7.数据的新增
字符类型数据加单引号
数字类型数据直接使用
日期类型数据加单引号
a.向表中指定列新增数据
语法:insert into 表(列1，列2...) values（值1，值2....）;
	向sp表中新增数据商品名称simida
	insert into sp(name) values('simida');
b.向表中所有列新增数据
语法：insert into 表 values(值1，值2...);
	向sp表中新增数据名称为o8ma,价格300
	insert into sp values('o8ma',300);
8.数据的修改
字符类型数据加单引号
数字类型数据直接使用
日期类型数据加单引号
语法：update 表 set 列=值 where 条件;
注意：where条件如果不加，修改的是整个列的数据，如果增加where条件，修改的是指定行的列
	修改sp表中名字为o8ma的商品价格为20
	update sp set price=20 where name='o8ma';
	修改sp表中所有商品价格为0
	update sp set price=0;
9.数据的删除
delete		可以删除指定数据，删除数据可以找回，DML(数据库操作语言)
truncate    只能删除所有数据，删除数据无法找回，DDL(数据库定义语言)
delete语法：delete from 表 where 条件;
注意：如果不加where条件删除的是所有数据
	删除sp表中名字是simida的商品
	delete from sp where name='simida';
	删除sp表中所有数据
	delete from sp;
truncate 语法：truncate table 表;
	删除sp表中所有的数据
	truncate table sp;
10.数据的查询
create table goods(
       gname char(20),
       price int,
       ddate date
);

insert into goods values('gaga',100,'2019-01-01'),('gaga',2000,'2019-02-01'),('simida',2000,'2018-01-01);
	a.查询的分类
		简单查询
		多表查询
		子查询
		分组查询
	b.简单查询
		语法：select 列 from 表 where 条件;
		查询表中指定列，指定行，指定行的列
		查询goods表中所有商品名称
		select gname from goods;
		查询goods表中商品价格为2000的所有信息
		select * from goods where price=2000;
		查询goods表中商品价格为2000的所有商品名称
		select gname from gods where price=2000;
	c.where条件
		比较
			>
			<
			=
			>=
			<=
			!=
			<>
		查询ecs_goods表中本店售价高于2000的所有商品信息
		注意：*代表所有列
		select * from ecs_goods where shop_price>2000;
		查询ecs_goods表中商品名称不是KD876的所有信息
		select * from ecs_goods where goods_name<>'KD876';
		关系
			and	同时满足
			or  满足一个条件即可
			not 不满足条件
		查询ecs_goods表中本店售价低于2000并且高于1000的所有信息
		select * from ecs_goods where shop_price<2000 and shop_price>1000;
		查询ecs_goods表中商品名称是KD876的或者诺基亚的所有信息
		select * from ecs_goods where goods_name='KD876' or goods_name='诺基亚';
		区间
			between...and...
			包括两个端点
		查询ecs_goods表中本店售价范围在800和1999之间的所有信息
		select * from ecs_goods where shop_price>=800 and shop_price<=1999;
		select * from ecs_goods where shop_price between 800 and 1999;
		模糊查询
			当信息不完整使用，通常和字符类型一起使用
			like
			_		一个字符
			%		任意个字符
		查询ecs_goods表中商品名称以诺基亚开头的所有信息
		select * from ecs_goods where goods_name like '诺基亚%';
		查询ecs_goods表中商品名称以6结尾的所有信息
		select * from ecs_goods where goods_name like '%6';
		查询ecs_goods表中商品名称是6个字符的所有信息
		select * from ecs_goods where goods_name like '______';
		空值查询
			空是没有任何数据类型，没有任何值，不能用于比较和运算
			查询时候使用is null或者is not null
		查询ecs_goods表中suppliers_id为空的所有信息
		select * from ecs_goods where suppliers_is is null;
		in
			在...里面，或的关系
		查询ecs_goods表中商品名称是KD876的或者诺基亚的所有信息
		select * from ecs_goods where goods_name in('KD876','诺基亚');
		补充：
		select * from ecs_goods where goods_name like '诺基亚%' and shop_price between 1000 and 2000;

============================================================
多表查询
	a.笛卡儿积
	select * from ecs_goods;
	select * from ecs_category;
	select * from ecs_goods,ecs_category;
	会导致数据量成倍增加，无效数据也会增加，为了避免此类情况，使用内联查询、左联查询、右联查询
	b.内联查询
	select 列 from 表1 ，表2 where 表1.列=表2.列;
	select 列 from 表1 inner join 表2 on 表1.列=表2.列；
	补充：判断关联列的方法
		名字一样
		作用一样
		主外键关系
	查询商品名称是KD876的分类名称
	1.分析列
		商品名称
		分类名称
	2.分析表
		商品名称  ecs_goods
		分类名称  ecs_category
	3.关联
		select * from ecs_goods,ecs_category
		where ecs_goods.cat_id=ecs_category.cat_id;
	4.过滤
		select cat_name from  ecs_goods,ecs_category
		where ecs_goods.cat_id=ecs_category.cat_id
		and goods_name='KD876';
	查询分类名称是3G手机的所有商品名称和分类id
	1.分析列
		商品名称
		分类id
		分类名称
	2.分析表
		ecs_goods
		ecs_category
	3.关联
		select * from ecs_goods g,ecs_category c
		where g.cat_id=c.cat_id;
	4.过滤
		select g.goods_name,c.cat_id from ecs_goods g,ecs_category c
		where g.cat_id=c.cat_id
		and c.cat_name='3G手机';
==================================================================
子查询
一条SQL语句的执行依赖于另外一条SQL语句的执行结果,数据新增、修改、删除都可以使用
查询商品名称是KD876的分类名称
1.分析列和表
	商品名称    ecs_gooods
	分类名称    ecs_category
2.分析关联
	cat_id
a.查询ecs_goods表中满足条件的cat_id
	select cat_id from ecs_goods where goods_name='KD876';
b.查询ecs_category表中cat_id为上面查询出来结果的分类名称	
	select cat_name from ecs_category where cat_id=(select cat_id from ecs_goods where goods_name='KD876');
注意：子查询分为单行子查询、多行子查询
	查询出来结果是1行，可以使用等号和in
	查询出来结果是多行，可以用in

查询商品本店价格在2000和3000之间的商品分类名称
a.查询ecs_goods表中满足条件的cat_id
select cat_id from ecs_goods where shop_price between 2000 and 3000;
b.查询ecs_category表中cat_id为上面查询出来结果的分类名称
select cat_name from ecs_category where cat_id=(select cat_id from ecs_goods where shop_price between 2000 and 3000);

2.jpg
3.insert into achievement values((select id from student where name='Robert'),80);
4.update achievement set mark=87 where id=(select id from student where name='Rose');
5.
delete from achievement where id=(select id from student where name='Betty');
delete from student where name='Betty';

排序和分页查询
排序：
	顺序       从小到大 
		order by 列
		order by 列 asc
	逆序、倒序  从大到小
		order by 列 desc
	语法：select 列 from 表
			where 条件
				order by 列;
	查询ecs_goods表中所有数据，按照本店售价顺序排列
		select * from ecs_goods order by shop_price;
	查询ecs_goods表中所有数据，按照cat_id从大到小进行排列
		select * from ecs_goods order by cat_id desc;
分页查询：
	limit 后跟的第一个参数是获取第几行
	如果有第二个参数是步长
	查询ecs_goods表中前5行数据
	select * from ecs_goods limit 5;
	查询ecs_goods表中5到10行数据
	select * from ecs_goods limit 5,10;
	注意：limit和排序在一块时候，排序一定要作为子查询
	select * from (select * from ecs_goods order by cat_id desc) limit 5;























































